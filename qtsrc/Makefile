#############################################################################
# Makefile for building: libgrafoui.so.1.0.0
# Generated by qmake (1.07a) (Qt 3.3.6) on: Thu Feb 28 16:51:25 2013
# Project:  grafoui.pro
# Template: lib
# Command: $(QMAKE) -o Makefile grafoui.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC  -DQT_NO_DEBUG -DQT_SHARED -DQT_THREAD_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/lib64/qt-3.3/mkspecs/default -I. -I../../../../opt/R-2.15.1/lib64/R/include -I${R_HOME}/include/i386 -I../../../../opt/R-2.15.1/lib64/R/library/Rcpp/include -I$(QTDIR)/include
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libgrafoui.so.1
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/home/opt/R-2.15.1/lib64/R/lib -lR -L -lRcpp -lqt-mt
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mydialog.h \
		grafoui.h
SOURCES = mydialog.cpp \
		grafoui.cpp
OBJECTS = mydialog.o \
		grafoui.o \
		dialog.o
FORMS = dialog.ui
UICDECLS = dialog.h
UICIMPLS = dialog.cpp
SRCMOC   = moc_mydialog.cpp \
		moc_dialog.cpp
OBJMOC = moc_mydialog.o \
		moc_dialog.o
DIST	   = grafoui.pro
QMAKE_TARGET = grafoui
DESTDIR  = 
TARGET   = libgrafoui.so.1.0.0
TARGETA	= libgrafoui.a
TARGETD	= libgrafoui.so.1.0.0
TARGET0	= libgrafoui.so
TARGET1	= libgrafoui.so.1
TARGET2	= libgrafoui.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: grafoui.pro  /usr/lib64/qt-3.3/mkspecs/default/qmake.conf /usr/lib64/qt-3.3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile grafoui.pro
qmake: 
	@$(QMAKE) -o Makefile grafoui.pro

dist: 
	@mkdir -p .tmp/grafoui && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/grafoui/ && ( cd `dirname .tmp/grafoui` && $(TAR) grafoui.tar grafoui && $(GZIP) grafoui.tar ) && $(MOVE) `dirname .tmp/grafoui`/grafoui.tar.gz . && $(DEL_FILE) -r .tmp/grafoui

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)


FORCE:

####### Compile

mydialog.o: mydialog.cpp mydialog.h \
		ui_dialog.h

grafoui.o: grafoui.cpp grafoui.h \
		mydialog.h \
		ui_dialog.h

dialog.h: dialog.ui 
	$(UIC) dialog.ui -o dialog.h

dialog.cpp: dialog.h dialog.ui 
	$(UIC) dialog.ui -i dialog.h -o dialog.cpp

dialog.o: dialog.cpp dialog.h

moc_mydialog.o: moc_mydialog.cpp  mydialog.h ui_dialog.h

moc_dialog.o: moc_dialog.cpp  dialog.h 

moc_mydialog.cpp: $(MOC) mydialog.h
	$(MOC) mydialog.h -o moc_mydialog.cpp

moc_dialog.cpp: $(MOC) dialog.h
	$(MOC) dialog.h -o moc_dialog.cpp

####### Install

install:  

uninstall:  

